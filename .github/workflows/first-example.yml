name: Deploy Infra to AWS

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.5.7

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      # üí° Decodificamos la clave privada guardada como secret en base64
      - name: Decode private key
        run: |
          echo "${{ secrets.EC2_PRIVATE_KEY_B64 }}" | base64 -d > public-key.pem
          chmod 600 public-key.pem
          
      # Instalamos Checkov para an√°lisis de vulnerabilidad
      - name: Install Checkov
        run: |
          python -m pip install --upgrade pip
          pip install checkov
          
      # Ejecutamos Checkov para an√°lisis de vulnerabilidades en Terraform
      - name: Run Checkov - Terraform security scan
        run: checkov -d . --skip-check CKV_AWS_19 --soft-fail # Puedes personalizar las reglas que quieres usar

      - name: Terraform Init
        run: terraform init

      - name: Terraform Plan
        run: terraform plan -var="private_key_path=public-key.pem"

      - name: Terraform Apply
        run: terraform apply -auto-approve -var="private_key_path=public-key.pem"

      # Paso de sleep para esperar 2 minutos antes de destruir los recursos
      - name: Wait for 2 minutes
        run: sleep 120  # Sleep de 2 minutos (120 segundos)

      # Paso para destruir la infraestructura en caso de error
      - name: Terraform Destroy (on failure)
        if: failure()  # Este paso solo se ejecutar√° si un paso anterior falla
        run: terraform destroy -auto-approve -var="private_key_path=public-key.pem"
